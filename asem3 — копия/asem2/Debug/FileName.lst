Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/25/23 13:35:48
FileName.asm						     Page 1 - 1


				.MODEL FLAT, STDCALL
				includelib kernel32.lib

				ExitProcess PROTO :DWORD
				MessageBoxA PROTO : DWORD, : DWORD, : DWORD, : DWORD

				.STACK 4096

 00000000			.CONST

 00000000			.DATA
 00000000 008A 003B 0044	    myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h           ; 2 байтаs
	   005F 0099
 0000000A 00000009		    massive DWORD 9, 1, 2, 3, 4, 5, 6, 0              ; 
	   00000001
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
	   00000000
 0000002A 00000000		    sumOfElements DWORD 0                          ; 

				    ; Строки для MessageBoxA
 0000002E 4D 65 73 73 61	    Str1 DB "Message", 0
	   67 65 00
 00000036 5A 65 72 6F 20	    Str2 DB "Zero Element Found", 0
	   45 6C 65 6D 65
	   6E 74 20 46 6F
	   75 6E 64 00
 00000049 4E 6F 20 5A 65	    Str3 DB "No Zero Element Found", 0
	   72 6F 20 45 6C
	   65 6D 65 6E 74
	   20 46 6F 75 6E
	   64 00

 00000000			.CODE

 00000000			main PROC
 00000000			start:
 00000000  BF 00000004		    mov EDI, 4
 00000005  66| 8B 87		    mov AX, [myWords + EDI]                         ; AX = myWords[4] = 44h
	   00000000 R
 0000000C  66| 8B 1D		    mov BX, myWords[0]                              ; BX = myWords[0] = 8Ah
	   00000000 R

				    ; Вычислить сумму элементов массива. Результат запомнить в регистре EAX.
 00000013  BE 0000000A R	    mov ESI, OFFSET massive
 00000018  B9 00000008		    mov ECX, LENGTHOF massive                        ; счетчик
 0000001D  BB 00000001		    mov EBX, 1
 00000022  B8 00000000		    mov eax, 0                                       ; обнулить сумму

 00000027			CYCLE:
 00000027  03 06		    add eax, [ESI]                                   ; EAX = EAX + massive[ESI], ESI = massive[0]
 00000029  83 C6 04		    add ESI, TYPE massive                           ; +4 байта
 0000002C  E2 F9		    loop CYCLE                                       ; ECX--, если (ECX != 0) переходим к CYCLE

				    ; Проверить наличие нулевого элемента
 0000002E  BE 0000000A R	    mov ESI, OFFSET massive
 00000033  B9 00000008		    mov ECX, LENGTHOF massive
 00000038			CHECK_ZERO:
 00000038  83 3E 00		    cmp dword ptr [ESI], 0                           ; сравнение с нулем
 0000003B  74 0C		    je ZERO
 0000003D  83 C6 04		    add ESI, TYPE massive                            ; +4 байта
 00000040  E2 F6		    loop CHECK_ZERO                                  ; ECX--, если (ECX != 0) переходим к CHECK_ZERO

				    ; Если программа дошла сюда, значит, нулевого элемента нет
 00000042  BB 00000000		    mov EBX, 0
 00000047  EB 13		    jmp ALLOK

 00000049			ZERO:
				    ; Если нашли нулевой элемент, выводим соответствующее сообщение
				    INVOKE MessageBoxA, 0, OFFSET Str2, OFFSET Str1, 1

 0000005C			ALLOK:
				    ; Завершить программу
				    INVOKE ExitProcess, 2

 00000063			main ENDP

				end main
Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/25/23 13:35:48
FileName.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000005F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000063 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000063 Public STDCALL
  start  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000027 _TEXT	
  CHECK_ZERO . . . . . . . . . .	L Near	 00000038 _TEXT	
  ZERO . . . . . . . . . . . . .	L Near	 00000049 _TEXT	
  ALLOK  . . . . . . . . . . . .	L Near	 0000005C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Str1 . . . . . . . . . . . . . .	Byte	 0000002E _DATA	
Str2 . . . . . . . . . . . . . .	Byte	 00000036 _DATA	
Str3 . . . . . . . . . . . . . .	Byte	 00000049 _DATA	
massive  . . . . . . . . . . . .	DWord	 0000000A _DATA	
myWords  . . . . . . . . . . . .	Word	 00000000 _DATA	
sumOfElements  . . . . . . . . .	DWord	 0000002A _DATA	

	   0 Warnings
	   0 Errors
